generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           String  @id @default(cuid())
  name         String
  email        String  @unique
  password     String?
  image        String?
  role         Role    @default(USER)
  refreshToken String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stores    Store[]
}

model Store {
  id     String @id @default(cuid())
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  billboards Billboard[]
  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Color     Color[]
}

model Billboard {
  id       String @id @default(cuid())
  label    String
  imageUrl String

  storeId String
  stores  Store  @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @default(cuid())
  name String

  storeId String
  stores  Store  @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id    String @id @default(cuid())
  name  String
  value String

  storeId String
  stores  Store  @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
